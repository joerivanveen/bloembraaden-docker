services:
  nginx:
    image: nginx:1.23-alpine
    depends_on:
      - php
    networks:
      - backend
    env_file:
      - .env.template
    volumes:
      - ./bloembraaden/bloembraaden:/usr/share/nginx/bloembraaden:delegated
      - ./bloembraaden-sites/htdocs:/usr/share/nginx/htdocs:delegated
      - ./volumes/static:/mnt/static/htdocs:ro
      - ./docker/config/nginx:/etc/nginx:ro
      - ./volumes/certificates:/etc/certificates:ro
      - ./volumes/logs:/tmp/logs:delegated
    ports:
      - "80:80"
      - "443:443"

  php:
    image: bloembraaden
    build:
      context: ./docker
      dockerfile: images/php/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - backend
    volumes:
      - ./bloembraaden/bloembraaden:/usr/share/nginx/bloembraaden:delegated
      - ./bloembraaden-sites/htdocs:/usr/share/nginx/htdocs:delegated
      - ./docker/config/bloembraaden:/tmp/config:ro
      - ./docker/config/opcache/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./volumes/cache:/tmp/cache:delegated
      - ./volumes/uploads:/mnt/uploads:delegated
      - ./volumes/invoice:/mnt/invoice:delegated
      - ./volumes/static:/mnt/static/htdocs:delegated
      - ./volumes/logs:/tmp/logs:delegated
      - ./volumes/certificates:/etc/mkcert

  cron:
    image: bloembraaden
    depends_on:
      - php
    env_file:
      - .env
    networks:
      - backend
    entrypoint: /bin/bash
    command: ["/tmp/scripts/cronstarter.sh"]
    init: true
    volumes:
      - ./bloembraaden/bloembraaden:/usr/share/nginx/bloembraaden:delegated
      - ./bloembraaden-sites/htdocs:/usr/share/nginx/htdocs:delegated
      - ./docker/config/bloembraaden:/tmp/config:ro
      - ./volumes/cache:/tmp/cache:delegated
      - ./volumes/uploads:/mnt/uploads:delegated
      - ./volumes/invoice:/mnt/invoice:delegated
      - ./volumes/static:/mnt/static/htdocs:delegated
      - ./volumes/logs:/tmp/logs:delegated
      - ./docker/config/cron/crontab:/etc/crontabs/www-data

  postgres:
    image: postgres
    restart: always
    networks:
      - backend
    env_file:
      - .env.template
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - ./volumes/postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

networks:
  backend:

